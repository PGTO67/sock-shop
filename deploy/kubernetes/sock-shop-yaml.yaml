apiVersion: v1
kind: Namespace
metadata:
  name: cortex-xdr
  labels:
    app.kubernetes.io/name: cortex-xdr
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/warn: privileged
    pod-security.kubernetes.io/audit: privileged
---

apiVersion: v1
kind: Secret
metadata:
  name: xdr-agent-deployment
  namespace: cortex-xdr
type: Opaque
stringData:
  distribution-id: "001b438cfabb49a0b94d0402566a1395"

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: xdr-agent-user
  namespace: cortex-xdr

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: xdr-agent-role
rules:
- apiGroups: [""]
  resources: ["pods", "namespaces"]
  verbs: ["get", "list", "watch"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: xdr-agent-role-binding-cortex-xdr
subjects:
- kind: ServiceAccount
  name: xdr-agent-user
  namespace: cortex-xdr
roleRef:
  kind: ClusterRole
  name: xdr-agent-role
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: Secret
type: kubernetes.io/dockerconfigjson
metadata:
  name: cortex-docker-secret
  namespace: cortex-xdr
data:
  .dockerconfigjson: eyJhdXRocyI6IHsiaHR0cHM6Ly91cy1jZW50cmFsMS1kb2NrZXIucGtnLmRldiI6IHsidXNlcm5hbWUiOiAiX2pzb25fa2V5IiwgInBhc3N3b3JkIjogIntcbiAgXCJ0eXBlXCI6IFwic2VydmljZV9hY2NvdW50XCIsXG4gIFwicHJvamVjdF9pZFwiOiBcInhkci11cy0xMDAxOTM4ODIxNzk0XCIsXG4gIFwicHJpdmF0ZV9rZXlfaWRcIjogXCJjNmE3OWQ4MTY5YTllN2U1ZmMxMzc2NzQxN2I4MDY4NjIyZDI1OTYyXCIsXG4gIFwicHJpdmF0ZV9rZXlcIjogXCItLS0tLUJFR0lOIFBSSVZBVEUgS0VZLS0tLS1cXG5NSUlFdmdJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLZ3dnZ1NrQWdFQUFvSUJBUUNzVzhCd0x2bFVjVS9jXFxuQWxVN0tGMFAvR3JxVkU1OUFzSmpER1hYOFIxQ0hLY0FlNHJ5cVRpTmhxRmhjSlczdkFtWFRsak1GbVRVUExza1xcbmNUTVYwS1pHSUNXVU5yZWs4SzQyQm9RNVdZbUtNdXIvR3VVRzBRK2ZMbXVhNVo3NVVyb0FPMTBjSCt0VjlyQXZcXG5nWnpvWlNKUEgxYVZoTVFnVmI3Q2Nwam9vdi92VDROaXNXVGx2Njd2WXdFd1lUd1UwaXVMM0c2SU1HS1NaOGVvXFxuc2cwS0RvaTM3TUgxeFZpUTJwWFBQWFNMM2QvVkVBVloxVEZ2eHBLR09MUThxQkE0UlZYRlUybFQ4eWtyMGZjN1xcbnRNMVJmeTFjM09UUkwyMS94ckloRWhxSkJPRUZHRG1rZmhRR3NxeEZLTnlXV3huNWI1QlZwQW93QWpobXV3QjBcXG53Vm5pZHZ6ekFnTUJBQUVDZ2dFQUUxenBaUkQ1NUxFb0loVEhBM0xZNVp0YlhZRGtJbW9sY1dBcXJ0UkJEN1ROXFxuVkNJTTdZN3lNZ0FPY0Rab00zQjErV0FOWEx3bFRxeVY3NVdpQWhEakpSeW1iQnlyaStXWUJLeTl2UDJnbEh4OFxcbjV2VGNCdVNFcDBMZFJ0VUdBNGQyS3VHQVo5RDBMTCtlY20vU3MwN3RTRXRDZkdDaWNlbUFHVE1ybDNMOFlxTnlcXG5Yb25WYUtGQU1tWXlzU284OHNieGNaZ1J1b1FraU9qV2hZeVNNQ2V4TnNzUHhkcXdSV2hpanFNWXd5aDdqdU44XFxuRjlxcFBHUmV2SThLYjhPZFVBNXNHbWczK2hwZnJZNDM4eXlyTnNkb09LZVhCcTlZZmxCN0VUSFBFZWlCQXk3ZVxcblZ6V1hyUlRmSk56OFhjdUJFdE54RjJXS1oxRS9mQWtpRDQ2MFROMDBWUUtCZ1FEZWJKU0h0VFlsYkxYaGVoQlhcXG42NjBuSmJwTGs0dWVrZHgxQkVVT2hrdVAvTHNMcFhsREYvTGxjYTZzOUxlSWlyZlE2S01nUHVSZTh3WVd4Z0RZXFxuZUtmK3QrVlExcFhvakpPeUdKc3MzRDVMTTF2ek93dnE1MkZoejlJaDZPSUhiNUtHRXphSEhrZWJsY3VDeXRBalxcbmUzQmtoRUdLVU5tN3hMYTE0WUZKTmxqaEhRS0JnUURHWUdyYlZLUWtrTXYvUnBtTzYybXVqRzdVWjhxbGlvVG9cXG45ZHNSL3ZENldUdzZZRWFWOG5EZzJrSUNYSkhoS1QzREphb2dxWC96dlAvOUxVajRCbXJManRYMXh2cXZVVDBSXFxuL2pSRDNYMzV5V2RkRGE5bmZHT0c5QjdncVREOHJiNklraGxUbmZBQTVCS2FXczJTSmtseHlFbWd3Si9HWTZhNFxcblFNZzNFd1dKVHdLQmdGbnh3cWFXU3cwYlJ2bWxLTkxGQlVKZGFWYUNsZVZMeXNDdk4xWEdUT3d2SVZ4MlQvRW5cXG4wQnVrdXlSSjJhWW5vbW1paWNUU2FmdFRmMVRhUVNGSXVYYXgydE96MHU4MVdjeWRVckx6WldWM29XbGNxVmNXXFxudGpTZG03WUd2TkNROThtc0gxTElsZUIrMU10UlJKWDBwdUNlOHZvQjgrcVFnK3BOQk1FY2J4aXBBb0dCQUxVOFxcbjg0TnRBZ1hTTUQ0S1gxTGVxdy9vaDMwUlVtZ0pkTUp0ay9jT0IxV0IzMitwOC9NY3E1b1NiWXBBenBwNmxrM0xcXG5CSEtReVRDQzlSRjJwUnJNcWhkTmFSY0I4cGZuemJhNW0wQ0JoSTJJUHlJWjFhM2pTLzdJMjhqL2Fwei9rM3FzXFxubCt6Mzk0U28yb0loQVgxTDgzKzdyK0RvKzFCQ1ROZzdmM0FwdGI0ckFvR0JBSXc3Q1M1Yy9zTkRzOUNQeFNNblxcbmtyWTh3UVc5RkowcWM5WkE3NVYxaHN5YlQrNHRsWWJZT2pBRGJmSFljVm51R2FlMW1uNUlJVmQvK2FsSHV6SXVcXG5LSWhYSVA1REVTN1VnczNaWmR6SU0yL2hHZVlINVMyKzVEMk5kTHZSTHlPSGNScGZ1ZGVyOWpJbG9RMElNU0xXXFxuQlpnOVlmd09tL0dwTlV4VWlaZmlvSmswXFxuLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLVxcblwiLFxuICBcImNsaWVudF9lbWFpbFwiOiBcInB1bGwtaW1hZ2VAeGRyLXVzLTEwMDE5Mzg4MjE3OTQuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb21cIixcbiAgXCJjbGllbnRfaWRcIjogXCIxMTc2ODMyMTA4OTk1MTY1OTY3MzZcIixcbiAgXCJhdXRoX3VyaVwiOiBcImh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS9vL29hdXRoMi9hdXRoXCIsXG4gIFwidG9rZW5fdXJpXCI6IFwiaHR0cHM6Ly9vYXV0aDIuZ29vZ2xlYXBpcy5jb20vdG9rZW5cIixcbiAgXCJhdXRoX3Byb3ZpZGVyX3g1MDlfY2VydF91cmxcIjogXCJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9vYXV0aDIvdjEvY2VydHNcIixcbiAgXCJjbGllbnRfeDUwOV9jZXJ0X3VybFwiOiBcImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL3JvYm90L3YxL21ldGFkYXRhL3g1MDkvcHVsbC1pbWFnZSU0MHhkci11cy0xMDAxOTM4ODIxNzk0LmlhbS5nc2VydmljZWFjY291bnQuY29tXCIsXG4gIFwidW5pdmVyc2VfZG9tYWluXCI6IFwiZ29vZ2xlYXBpcy5jb21cIlxufVxuIiwgImVtYWlsIjogInB1bGwtaW1hZ2VAeGRyLXVzLTEwMDE5Mzg4MjE3OTQuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLCAiYXV0aCI6ICJYMnB6YjI1ZmEyVjVPbnNpZEhsd1pTSTZJQ0p6WlhKMmFXTmxYMkZqWTI5MWJuUWlMQ0FpY0hKdmFtVmpkRjlwWkNJNklDSjRaSEl0ZFhNdE1UQXdNVGt6T0RneU1UYzVOQ0lzSUNKd2NtbDJZWFJsWDJ0bGVWOXBaQ0k2SUNKak5tRTNPV1E0TVRZNVlUbGxOMlUxWm1NeE16YzJOelF4TjJJNE1EWTROakl5WkRJMU9UWXlJaXdnSW5CeWFYWmhkR1ZmYTJWNUlqb2dJaTB0TFMwdFFrVkhTVTRnVUZKSlZrRlVSU0JMUlZrdExTMHRMVnh1VFVsSlJYWm5TVUpCUkVGT1FtZHJjV2hyYVVjNWR6QkNRVkZGUmtGQlUwTkNTMmQzWjJkVGEwRm5SVUZCYjBsQ1FWRkRjMWM0UW5kTWRteFZZMVV2WTF4dVFXeFZOMHRHTUZBdlIzSnhWa1UxT1VGelNtcEVSMWhZT0ZJeFEwaExZMEZsTkhKNWNWUnBUbWh4Um1oalNsY3pka0Z0V0ZSc2FrMUdiVlJWVUV4emExeHVZMVJOVmpCTFdrZEpRMWRWVG5KbGF6aExOREpDYjFFMVYxbHRTMDExY2k5SGRWVkhNRkVyWmt4dGRXRTFXamMxVlhKdlFVOHhNR05JSzNSV09YSkJkbHh1WjFwNmIxcFRTbEJJTVdGV2FFMVJaMVppTjBOamNHcHZiM1l2ZGxRMFRtbHpWMVJzZGpZM2RsbDNSWGRaVkhkVk1HbDFURE5ITmtsTlIwdFRXamhsYjF4dWMyY3dTMFJ2YVRNM1RVZ3hlRlpwVVRKd1dGQlFXRk5NTTJRdlZrVkJWbG94VkVaMmVIQkxSMDlNVVRoeFFrRTBVbFpZUmxVeWJGUTRlV3R5TUdaak4xeHVkRTB4VW1aNU1XTXpUMVJTVERJeEwzaHlTV2hGYUhGS1FrOUZSa2RFYld0bWFGRkhjM0Y0Umt0T2VWZFhlRzQxWWpWQ1ZuQkJiM2RCYW1odGRYZENNRnh1ZDFadWFXUjJlbnBCWjAxQ1FVRkZRMmRuUlVGRk1YcHdXbEpFTlRWTVJXOUphRlJJUVROTVdUVmFkR0pZV1VSclNXMXZiR05YUVhGeWRGSkNSRGRVVGx4dVZrTkpUVGRaTjNsTlowRlBZMFJhYjAwelFqRXJWMEZPV0V4M2JGUnhlVlkzTlZkcFFXaEVha3BTZVcxaVFubHlhU3RYV1VKTGVUbDJVREpuYkVoNE9GeHVOWFpVWTBKMVUwVndNRXhrVW5SVlIwRTBaREpMZFVkQldqbEVNRXhNSzJWamJTOVRjekEzZEZORmRFTm1SME5wWTJWdFFVZFVUWEpzTTB3NFdYRk9lVnh1V0c5dVZtRkxSa0ZOYlZsNWMxTnZPRGh6WW5oaldtZFNkVzlSYTJsUGFsZG9XWGxUVFVObGVFNXpjMUI0WkhGM1VsZG9hV3B4VFZsM2VXZzNhblZPT0Z4dVJqbHhjRkJIVW1WMlNUaExZamhQWkZWQk5YTkhiV2N6SzJod1puSlpORE00ZVhseVRuTmtiMDlMWlZoQ2NUbFpabXhDTjBWVVNGQkZaV2xDUVhrM1pWeHVWbnBYV0hKU1ZHWktUbm80V0dOMVFrVjBUbmhHTWxkTFdqRkZMMlpCYTJsRU5EWXdWRTR3TUZaUlMwSm5VVVJsWWtwVFNIUlVXV3hpVEZob1pXaENXRnh1TmpZd2JrcGljRXhyTkhWbGEyUjRNVUpGVlU5b2EzVlFMMHh6VEhCWWJFUkdMMHhzWTJFMmN6bE1aVWxwY21aUk5rdE5aMUIxVW1VNGQxbFhlR2RFV1Z4dVpVdG1LM1FyVmxFeGNGaHZha3BQZVVkS2MzTXpSRFZNVFRGMmVrOTNkbkUxTWtab2VqbEphRFpQU1VoaU5VdEhSWHBoU0VoclpXSnNZM1ZEZVhSQmFseHVaVE5DYTJoRlIwdFZUbTAzZUV4aE1UUlpSa3BPYkdwb1NGRkxRbWRSUkVkWlIzSmlWa3RSYTJ0TmRpOVNjRzFQTmpKdGRXcEhOMVZhT0hGc2FXOVViMXh1T1dSelVpOTJSRFpYVkhjMldVVmhWamh1UkdjeWEwbERXRXBJYUV0VU0wUktZVzluY1ZndmVuWlFMemxNVldvMFFtMXlUR3AwV0RGNGRuRjJWVlF3VWx4dUwycFNSRE5ZTXpWNVYyUmtSR0U1Ym1aSFQwYzVRamRuY1ZSRU9ISmlOa2xyYUd4VWJtWkJRVFZDUzJGWGN6SlRTbXRzZUhsRmJXZDNTaTlIV1RaaE5GeHVVVTFuTTBWM1YwcFVkMHRDWjBadWVIZHhZVmRUZHpCaVVuWnRiRXRPVEVaQ1ZVcGtZVlpoUTJ4bFZreDVjME4yVGpGWVIxUlBkM1pKVm5neVZDOUZibHh1TUVKMWEzVjVVa295WVZsdWIyMXRhV2xqVkZOaFpuUlVaakZVWVZGVFJrbDFXR0Y0TW5SUGVqQjFPREZYWTNsa1ZYSk1lbHBYVmpOdlYyeGpjVlpqVjF4dWRHcFRaRzAzV1VkMlRrTlJPVGh0YzBneFRFbHNaVUlyTVUxMFVsSktXREJ3ZFVObE9IWnZRamdyY1ZGbkszQk9RazFGWTJKNGFYQkJiMGRDUVV4Vk9GeHVPRFJPZEVGbldGTk5SRFJMV0RGTVpYRjNMMjlvTXpCU1ZXMW5TbVJOU25SckwyTlBRakZYUWpNeUszQTRMMDFqY1RWdlUySlpjRUY2Y0hBMmJHc3pURnh1UWtoTFVYbFVRME01VWtZeWNGSnlUWEZvWkU1aFVtTkNPSEJtYm5waVlUVnRNRU5DYUVreVNWQjVTVm94WVROcVV5ODNTVEk0YWk5aGNIb3Zhek54YzF4dWJDdDZNemswVTI4eWIwbG9RVmd4VERnekt6ZHlLMFJ2S3pGQ1ExUk9aemRtTTBGd2RHSTBja0Z2UjBKQlNYYzNRMU0xWXk5elRrUnpPVU5RZUZOTmJseHVhM0paT0hkUlZ6bEdTakJ4WXpsYVFUYzFWakZvYzNsaVZDczBkR3haWWxsUGFrRkVZbVpJV1dOV2JuVkhZV1V4Ylc0MVNVbFdaQzhyWVd4SWRYcEpkVnh1UzBsb1dFbFFOVVJGVXpkVlozTXpXbHBrZWtsTk1pOW9SMlZaU0RWVE1pczFSREpPWkV4MlVreDVUMGhqVW5CbWRXUmxjamxxU1d4dlVUQkpUVk5NVjF4dVFscG5PVmxtZDA5dEwwZHdUbFY0VldsYVptbHZTbXN3WEc0dExTMHRMVVZPUkNCUVVrbFdRVlJGSUV0RldTMHRMUzB0WEc0aUxDQWlZMnhwWlc1MFgyVnRZV2xzSWpvZ0luQjFiR3d0YVcxaFoyVkFlR1J5TFhWekxURXdNREU1TXpnNE1qRTNPVFF1YVdGdExtZHpaWEoyYVdObFlXTmpiM1Z1ZEM1amIyMGlMQ0FpWTJ4cFpXNTBYMmxrSWpvZ0lqRXhOelk0TXpJeE1EZzVPVFV4TmpVNU5qY3pOaUlzSUNKaGRYUm9YM1Z5YVNJNklDSm9kSFJ3Y3pvdkwyRmpZMjkxYm5SekxtZHZiMmRzWlM1amIyMHZieTl2WVhWMGFESXZZWFYwYUNJc0lDSjBiMnRsYmw5MWNta2lPaUFpYUhSMGNITTZMeTl2WVhWMGFESXVaMjl2WjJ4bFlYQnBjeTVqYjIwdmRHOXJaVzRpTENBaVlYVjBhRjl3Y205MmFXUmxjbDk0TlRBNVgyTmxjblJmZFhKc0lqb2dJbWgwZEhCek9pOHZkM2QzTG1kdmIyZHNaV0Z3YVhNdVkyOXRMMjloZFhSb01pOTJNUzlqWlhKMGN5SXNJQ0pqYkdsbGJuUmZlRFV3T1Y5alpYSjBYM1Z5YkNJNklDSm9kSFJ3Y3pvdkwzZDNkeTVuYjI5bmJHVmhjR2x6TG1OdmJTOXliMkp2ZEM5Mk1TOXRaWFJoWkdGMFlTOTROVEE1TDNCMWJHd3RhVzFoWjJVbE5EQjRaSEl0ZFhNdE1UQXdNVGt6T0RneU1UYzVOQzVwWVcwdVozTmxjblpwWTJWaFkyTnZkVzUwTG1OdmJTSXNJQ0oxYm1sMlpYSnpaVjlrYjIxaGFXNGlPaUFpWjI5dloyeGxZWEJwY3k1amIyMGlmUT09In19fQ==

---

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cortex-agent
  namespace: cortex-xdr
  labels:

    app.kubernetes.io/name: cortex-agent
    app.kubernetes.io/part-of: cortex
    app.kubernetes.io/component: agent
    app.kubernetes.io/version: "8.8.0.133595"

spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cortex-agent

  updateStrategy:
    type: RollingUpdate

  template:
    metadata:
      labels:
        app.kubernetes.io/name: cortex-agent
      annotations:

        container.apparmor.security.beta.kubernetes.io/cortex-agent: unconfined

    spec:
      serviceAccountName: xdr-agent-user

      nodeSelector:
        kubernetes.io/os: linux

      hostNetwork: true
      hostPID: true
      hostIPC: true
      
      tolerations:

      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: PreferNoSchedule
      - operator: Exists
        effect: NoExecute

      containers:
      - name: cortex-agent
        image: us-central1-docker.pkg.dev/xdr-us-1001938821794/agent-docker/cortex-agent:8.8.0.133595

        securityContext:
          appArmorProfile:
            type: Unconfined
          capabilities:
            add:
            - SYS_ADMIN
            - SYSLOG
            - SYS_CHROOT
            - SYS_MODULE
            - SYS_PTRACE
            - SYS_RESOURCE
            - SYS_RAWIO
            - DAC_OVERRIDE
            - DAC_READ_SEARCH
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - FOWNER
            - KILL
            - SETGID
            - SETUID

        env:
        - name: XDR_HOST_ROOT
          value: "/host-fs"
        - name: XDR_POD_INFO
          value: "/var/run/pod-info"
        - name: XDR_CLUSTER_NAME_URL
          value: "metadata2"
        - name: XDR_CLUSTER_NAME
          value: ""
        - name: XDR_VAR_LOG_HOST_PATH
          value: "/var/log"

        volumeMounts:

        - name: host-fs
          mountPath: /host-fs
          readOnly: true

        - name: var-log
          mountPath: /var/log

        - name: host-km-directory
          mountPath: /lib/modules

        - name: pod-info
          mountPath: /var/run/pod-info
          readOnly: true

        - name: agent-ids
          mountPath: /etc/traps

        - name: deployment-secrets
          mountPath: /opt/traps/config/deployment
          readOnly: true

        resources:
          requests:
            cpu: "200m"
            memory: "600Mi"
          limits:
            memory: "2Gi"

      terminationGracePeriodSeconds: 90

      volumes:
      - name: host-fs
        hostPath:
          path: /
          type: Directory

      - name: var-log
        hostPath:
          path: "/var/log"
          type: DirectoryOrCreate

      - name: host-km-directory
        hostPath:
          path: /lib/modules

      - name: pod-info
        downwardAPI:
          items:
          - path: uid
            fieldRef:
              fieldPath: metadata.uid
          - path: name
            fieldRef:
              fieldPath: metadata.name
          - path: labels
            fieldRef:
              fieldPath: metadata.labels
          - path: annotations
            fieldRef:
              fieldPath: metadata.annotations
      - name: agent-ids
        hostPath:
            path: /etc/traps
            type: DirectoryOrCreate

      - name: deployment-secrets
        secret:
          secretName: xdr-agent-deployment
      
      imagePullSecrets:
      - name: cortex-docker-secret